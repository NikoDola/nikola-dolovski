/* ==========================================================================
   Base & Layout Styles
   (General wrapper, main layout, and responsive defaults)
   ========================================================================== */
.heroSectionWrapper {
  width: 100%;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
 
}

/* ==========================================================================
   Images Wrapper & Background Effects
   (Styles for the main image container and its pseudo-elements)
   ========================================================================== */
.imagesWrapper {
  position: relative;
  margin: 0 auto;
  border-radius: 0;
  width: 100%;
}

/* The primary image container for the character and its effects */
.imageWrapper {
  position: absolute;
  bottom: 0;
  left: 50%;
  transform: translate(-50%);
  width: 440px; /* Base width for the character area */
  height: 644px; /* Base height for the character area */
  margin: 0 auto;
  z-index: -1; /* Keep behind other content */
}

/* Pseudo-element for the bottom gradient background */
.imageWrapper::before {
  content: "";
  display: block;
  width: 100%;
  height: 80%;
  position: relative;
  bottom: -8rem; /* Adjust position relative to .imageWrapper */
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0) 5%,
    var(--before-background, red) 150%
  );
  border-top-left-radius: 50%;
  border-top-right-radius: 50%;
  z-index: -2; /* Furthest back */
}

/* Pseudo-element for the floating animated blob */
.imageWrapper::after {
  content: "";
  display: block;
  width: 200px;
  height: 200px;
  background-color: var(--after-background, red); /* Dynamic color */
  z-index: -1; /* Behind the character, but above the gradient */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -60%);
  border-radius: 80% 200% 100% 150%;
  animation: float 15s infinite; /* Animation for the blob */
}

/* Animation for the floating blob */
@keyframes float {
  0% {
    transform: translate(-50%, -80%) rotate(0deg) scale(1);
    border-radius: 80% 200% 100% 150%;
  }
  15% {
    transform: translate(-50%, -60%) rotate(40deg) scale(1.3);
    border-radius: 25% 25% 25% 25%;
  }
  30% {
    transform: translate(-40%, -90%) rotate(-20deg) scale(0.7);
    border-radius: 0% 0% 0% 0%;
  }
  45% {
    transform: translate(-50%, -60%) rotate(10deg) scale(1.2);
    border-radius: 25% 25% 25% 25%;
  }
  60% {
    transform: translate(-20%, -70%) rotate(-15deg) scale(0.8);
    border-radius: 50% 50% 50% 50%;
  }
  75% {
    transform: translate(-35%, -80%) rotate(10deg) scale(1.2);
    border-radius: 100% 100% 100% 100%;
  }
  100% {
    transform: translate(-50%, -80%) rotate(0deg) scale(1);
    border-radius: 80% 200% 100% 150%;
  }
}



/* ==========================================================================
   Character Images (Clothing, Head, Hands)
   ========================================================================== */
.clothingImage {
  position: absolute;
  left: 50%;
  top: 100%; /* Position relative to .imageWrapper */
  width: 254px;
  transform: translate(-50%, -100%);
}

.headImage {
  position: absolute;
  left: 50%;
  top: 28.2%; /* Position relative to .imageWrapper */
  width: 94px;
  transform: translate(-40%);
  bottom: 75%;
  z-index: 10; /* Above clothing */
}

@keyframes headAnimate {
  0% {
    transform: translate(-40%,0);
  }
  50% {
     transform: translate(-40%,0);
  }
  75% {
         transform: translate(-40%,0);
  }

  100% {
     transform: translate(-40%,140%);
   
  }
}


/* General styles for both hands */
.leftHand,
.rightHand {
  position: absolute;
  width: 68px; /* Base width */
}

.leftHand {
  top: 78%;
  left: 68.5%;
  transform: translate(-30%);
  z-index: 5;
 
}



@keyframes leftHandAnimate {
  0% {
    top: 78%;
    left: 68.5%;
    transform: translate(-30%) rotate(0deg);
  }
  50% {
    top: 50%;
    left: 80%;
    transform: translate(-30%) rotate(-45deg);
  }
  75% {
    top: 20%;
    left: 60%;
    z-index: 100;
    transform: translate(-30%) rotate(25deg);
  }
  100% {
    top: 50%;
    left: 60%;
    z-index: 100;
    transform: translate(-30%) rotate(0deg);
  }
}

.animate-left {
  animation: leftHandAnimate 5s infinite;
}
.animate-right {
  animation: rightHandAnimate 5s infinite;
}
.animate-head{
  animation: headAnimate 5s infinite;
}


.rightHand {
  top: 75.5%;
  width: 47px; /* Slightly different width */
  left: 24%;
  transform: translate(-30%);
  z-index: 4;

}

@keyframes rightHandAnimate {
  0%{
     top: 75.5%;
     left: 24%;
  }
  50%{
    top: 50%;
    left: 0%;
    transform: rotate(45deg);
  }
  75%{
   top: 20.5%;
     left: 33%;
    z-index: 100;
    transform: rotate(-25deg);
    z-index: 0;
  }
    100%{
    top: 50.5%;
    left: 40%;
    z-index: 100;
  }
}


/* ==========================================================================
   Hand Wrapper Pseudo-elements (Animated shapes around hands)
   ========================================================================== */
/* Animation for shapes around hands */
@keyframes shapeHandLeftBefore {
  0% {
    transform: translate(0%, 0%) rotate(-25deg) scale(1);
  }
  25% {
    transform: translate(600%, -50%) scale(0.6);
  }
  50% {
    transform: translate(500%, -500%) rotate(45deg);
  }
  60% {
    transform: translate(-200%, -800%) scale(1);
  }
  75% {
    transform: translate(-200%, -200%) rotate(45deg) scale(1.3);
  }
  100% {
    transform: translate(0%, 0%) rotate(-25deg) scale(1);
  }
}

/* Pseudo-element for the left hand wrapper (after) */
.leftHandWrapper::after {
  content: "";
  position: absolute;
  top: 87%;
  left: 23%;
  display: block;
  width: 60px;
  height: 60px;
  background-color: var(--after-background); /* Dynamic color */
  animation: shapeHandLeftBefore 20s alternate-reverse ease-in-out 1s infinite;
  transform: rotate(-20deg);
}

/* Pseudo-element for the left hand wrapper (before) */
.leftHandWrapper::before {
  content: "";
  position: absolute;
  top: 85%;
  left: 23%;
  display: block;
  width: 60px;
  height: 60px;
  background-color: var(--before-background); /* Dynamic color */
  clip-path: circle(50% at 50% 50%); /* Circular shape */
  z-index: 3;
  animation: shapeHandLeftBefore 20s alternate ease-in-out 1s infinite;
}

/* ==========================================================================
   Skill Icons Section
   (Styles for the skill categories, individual icons, and separators)
   ========================================================================== */
.iconWrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto;
  z-index: 0; /* Ensures icons are visible */
  width: 100%;
}
.skillCategory{
  display: flex;
  flex-direction: column;
  align-items: center;
}
.designIcons,
.codeIcons {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.3rem;
  z-index: 10; /* Above other elements */
}

.skillsText {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: var(--text-xs); /* Assuming --text-xs is defined elsewhere */
  margin-bottom: 1rem;
  text-align: left;

  font-style: italic;
}

.skillIcon {
  cursor: pointer;
  pointer-events: auto;
  border-radius: 0.35rem;
  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;
  width: 2rem;
  transition: transform 0.3s ease, box-shadow 0.3s ease; /* Smooth transitions */
}

.skillIcon.active {
  filter: grayscale(0%); /* Ensure no grayscale if previously applied */
  opacity: 1;
  transform: scale(1.6); /* Magnify active icon */
  z-index: 10;
}

.skillIcon:hover {
  box-shadow: rgba(0, 0, 0, 0.2) 0px 7px 22px;
}

.hrLine {
  pointer-events: none; /* Prevents interaction */
  position: relative;
  z-index: -1;
  width: 1px;
  height: 20px;
  background-color: var(--dark-tan-color); /* Assuming this variable is defined */
}

/* ==========================================================================
   Hero Text Section
   ========================================================================== */
.heroTextWrapper {
  /* Add styles for your text wrapper here */
  text-align: center; 
  padding: 1em;
 
}

.heroTextWrapper h3 {
  font-size: var(--text-4xl);
  margin-bottom: 0.5em; 
}

.heroTextWrapper p {
  font-size: 1em; 
  line-height: 1.5; 
}

.heroTextWrapper p b {
  color: var(--link-color, blue); /* Example of a link color variable */
}

/* ==========================================================================
   Chat Image (OpenAI specific)
   ========================================================================== */
.imageChat {
  position: absolute;
  left: 50%;
  top: 25%;
  width: 50%;
  transform: translate(-50%);
  z-index: 20; /* Ensure it's on top */
}


/* ==========================================================================
   Media Queries
   (Responsive adjustments)
   ========================================================================== */
@media (max-width: 1000px) {
  .skillIcon.active {
    transform: scale(1.8); /* Slightly smaller scale for active icon on smaller screens */
  }
}